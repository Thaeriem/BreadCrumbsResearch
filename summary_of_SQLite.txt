
Updated on 03/07/2022 by Yash Kaul

Summary of various links about SQLite and important info from each:
1) https://www.sqlitetutorial.net/
 - SQLite Tutorial
  - SQLite is a open-source, stand-alone database system
    that works by storing data and then allowing users to 
    retrieve data using SQL queries.
  - You can do basic queries by using the keyword SELECT
  - You may sort queries in either ascending or descending order
  - You can filter and group data using arbritary criteria
  - You may add constraints to data (will be usefull for removing
    sensative info from our graph)
2) https://www.codeproject.com/Articles/5119331/Fetch-and-Search-Your-Chrome-History  
 - Fetch and Search Your Chrome History
  - SQLite stores data in dynamic arrays through the inbuilt CSimpleArray construct
  - SQLite creates a backup storage database to copy from in order to not interfere
    with user processes that are running while copying the user data.
  - There is a fetch all browsing history embed that we can implement/call from but 
    for other types of data this may pose as an issue.
3) http://2016.padjo.org/tutorials/sqlite-your-browser-history/
 - Reading Your Browser's History with SQLite
  - Insightful understanding about personal versus public user data and that there  
    should always be a lens and filter while using SQLite for private databases
  - Consider the fact that users may use different browsers and we want to have 
    a program that supports more than Chrome (discuss with team members)
  - The history tab on SQLite has in-build filtering because the number of links would
    be overbearing so we can pre-search for key links rather than having to parse them later
4) https://gist.github.com/dropmeaword/9372cbeb29e8390521c2
 SQL calls for Chrome db:
  SELECT 
    datetime(last_visit_time/1000000-11644473600, "unixepoch") as last_visited, 
    url, 
    title, 
    visit_count 
  FROM urls;

5) http://html5doctor.com/introducing-web-sql-databases/
 - "If you haven’t guessed from the overly verbose specification title, Web SQL Databases 
   is a spec that brings SQL to the client side. If you have a back-end developer’s background,
   then you’ll probably be familiar with SQL and happy as a pig in muck."
 - Creating and Opening Databases
   -If you try to open a database that doesn’t exist, the API will create it on the fly for you.
    You also don’t have to worry about closing databases.
 - Transactions. 
   -Transactions can be used to rollback. This means that if a transaction — which could contain 
   one or more SQL statements — fails (either the SQL or the code in the transaction), 
   the updates to the database are never committed.